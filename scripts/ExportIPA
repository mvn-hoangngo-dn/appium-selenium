#!/bin/bash

# define colo codes
NOCOLOR='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'



OPTION=0
APP_VERSION="1.0.0"
BUILD_NUMBER="1"
BRANCH_NAME="master"
WORKFLOW="EXPORT_CM_STG"

# get app cm or cm+ and stg or prod
echo -e "${GREEN}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~${NOCOLOR}"
while true
do
    echo -e "${BLUE}Select app to be exported:${NOCOLOR}"
    echo -e "${RED}1${NOCOLOR}. CM staging"
    echo -e "${RED}2${NOCOLOR}. CM production"
    echo -e "${RED}3${NOCOLOR}. CM+ staging"
    echo -e "${RED}4${NOCOLOR}. CM+ production"
    read -p "$(echo -e "${RED}Select option${NOCOLOR}: ")" OPTION
    if [[ $OPTION -ge 1 && $OPTION -le 4 ]] ; then
        break
    fi
done

#get remote branch name to build base on current local branch
BRANCH_NAME="";
read -p "$(echo -e Set branch name:) " BRANCH_NAME

#send message to git autho
AUTHOR_EMAIL="$(git config user.email)"
AUTHOR_CODE=""
if [[ "$AUTHOR_EMAIL" == *"truong.nguyen"* ]]; then
  AUTHOR_CODE="U9QBQE78Q"
fi

if [[ "$AUTHOR_EMAIL" == *"thuy.nguyen"* ]]; then
  AUTHOR_CODE="U9R1TNA3U"
fi

if [[ "$AUTHOR_EMAIL" == *"ly.truong"* ]]; then
  AUTHOR_CODE="U9R0XEPJQ"
fi

if [[ "$AUTHOR_EMAIL" == *"tan.huynh"* ]]; then
  AUTHOR_CODE="UE24QRLDD"
fi

if [[ "$AUTHOR_EMAIL" == *"que.dinh"* ]]; then
  AUTHOR_CODE="UE137J0E6"
fi

if [[ "$AUTHOR_EMAIL" == *"tien.tran2"* ]]; then
  AUTHOR_CODE="UPW2D6R7B"
fi

if [[ "$AUTHOR_EMAIL" == *"ha.van"* ]]; then
  AUTHOR_CODE="U016E89RYL8"
fi

if [[ "$AUTHOR_EMAIL" == *"tam.nguyen7"* ]]; then
  AUTHOR_CODE="U0159LHMQNT"
fi

if [[ "$AUTHOR_EMAIL" == *"anh.quach"* ]]; then
  AUTHOR_CODE="U9R0NEQF6"
fi

if [[ "$AUTHOR_EMAIL" == *"mai.ho"* ]]; then
  AUTHOR_CODE="UCB9AQT8B"
fi
#...........APP VERSION...................................................
while true
do
    read -p "Set app version: " APP_VERSION
    if [[ $APP_VERSION =~ ^([0-9]+\.){2}([0-9]+)[a-z_\.]*$ ]] ; then
        break
    fi
done
#...........BUILD NUMBER..................................................
while true
do
    read -p "Set build number: " BUILD_NUMBER
    if [[ $BUILD_NUMBER =~ ^[0-9]+$ ]] ; then
        break
    fi
done
# Sign bundle id and app name
APP_NAME="CM"
BUNDLE="jp.co.lc.caloriemama"
if [[ $OPTION == 3 || $OPTION == 4 ]]; then 
    APP_NAME="CM+"; 
    BUNDLE="jp.co.lc.karadakawarunavi";
fi

ENV="STG"
if [[ $OPTION == 2 || $OPTION == 4 ]]; then ENV="PROD"; fi

#---------SHOW INFO---------------
echo -e "${GREEN}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~${NOCOLOR}"
echo -e "Export ipa file for auto testing information:"
echo -e "App:\t\t\t${RED}$APP_NAME${NOCOLOR}"
echo -e "Env:\t\t\t${RED}$ENV${NOCOLOR}"
echo -e "Branch:\t\t\t${RED}$BRANCH_NAME${NOCOLOR}"
echo -e "App version:\t\t${RED}$APP_VERSION${NOCOLOR}"
echo -e "Build number:\t\t${RED}$BUILD_NUMBER${NOCOLOR}"
echo -e "${GREEN}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~${NOCOLOR}"

if [[ $OPTION == 1 ]]; then WORKFLOW="EXPORT_CM_STG"; fi
if [[ $OPTION == 2 ]]; then WORKFLOW="EXPORT_CM_PROD"; fi
if [[ $OPTION == 3 ]]; then WORKFLOW="EXPORT_CM_PLUS_STG"; fi
if [[ $OPTION == 4 ]]; then WORKFLOW="EXPORT_CM_PLUS_PROD"; fi
#----------CALL API---------------

RESULT=$(curl https://app.bitrise.io/app/66aeb46390cebbea/build/start.json --data "{\"hook_info\":{\"type\":\"bitrise\",\"build_trigger_token\":\"Oq3myvQKAmgF3Z-nLlmx8g\"},\"build_params\":{\"branch\":\"${BRANCH_NAME}\",\"workflow_id\":\"${WORKFLOW}\",\"environments\":[{\"mapped_to\":\"APP_VERSION\",\"value\":\"${APP_VERSION}\",\"is_expand\":true},{\"mapped_to\":\"BUILD_NUMBER\",\"value\":\"${BUILD_NUMBER}\",\"is_expand\":true},{\"mapped_to\":\"AUTHOR_CODE\",\"value\":\"${AUTHOR_CODE}\",\"is_expand\":true},{\"mapped_to\":\"BUNDLE\",\"value\":\"${BUNDLE}\",\"is_expand\":true}]},\"triggered_by\":\"curl\"}")
echo -e "${GREEN}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~${NOCOLOR}"
STATUS="$(echo $RESULT | jq '.status')"
if [[ $STATUS == "error" ]] ; then
    echo -e "Status: ${RED}FAIL:${NOCOLOR} $(echo $RESULT | jq '.message')"
else
    echo -e "Status: ${GREEN}ADDED REQUEST. Running progress:${NOCOLOR} $(echo $RESULT | jq '.build_url')"
fi

